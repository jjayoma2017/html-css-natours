/* css resets */
*,
*::after,
*::before {
  margin: 0;
  padding: 0;
  box-sizing: inherit;
  /* force inheritance */ }

html {
  /* root */
  font-size: 62.5%;
  /* 10px equivalent of the deafult 16px*/ }

body {
  font-family: 'Lato', sans-serif;
  font-weight: 400;
  font-size: 16px;
  line-height: 1.7;
  color: #777;
  padding: 3rem;
  /* add a padding on the entire body */
  box-sizing: border-box; }

.header {
  height: 95vh;
  /* vh = viewport height; 95%*/
  background-image: linear-gradient(to right bottom, rgba(126, 213, 111, 0.8), rgba(40, 180, 133, 0.8)), url("../img/hero.jpg");
  background-size: cover;
  /* whatever the width of the viewport. It will always cover the element in the box */
  background-position: top;
  /* stay background image on top */
  position: relative;
  /* is the origin  position when using absolute on the child */
  clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);
  /* https://bennettfeely.com/clippy/ */ }
  .header__logo-box {
    position: absolute;
    top: 4rem;
    left: 4rem; }
  .header__logo {
    height: 3.5rem;
    /* browser will adjust on the width */ }
  .header__text-box {
    position: absolute;
    top: 40%;
    left: 50%;
    /* in relation to the parent */
    transform: translate(-50%, -50%);
    /* in relation to the element */
    text-align: center; }

.heading-primary {
  color: #fff;
  text-transform: uppercase;
  backface-visibility: hidden;
  /* make the back part hidden during animation */
  margin-bottom: 6rem; }
  .heading-primary--main {
    display: block;
    /* occupy the width and have a new line each element*/
    font-size: 6rem;
    font-weight: 400;
    letter-spacing: 3.5rem;
    animation-name: moveInLeft;
    animation-duration: 2s;
    animation-timing-function: ease-out;
    /* animation-iteration-count: 3; */
    /* animation-delay: 3s; */ }
  .heading-primary--sub {
    display: block;
    font-size: 2rem;
    font-weight: 700;
    letter-spacing: 1.75rem;
    animation-name: moveInRight;
    animation: moveInRight 2s ease-out;
    /* combine in 1 line */ }

@keyframes moveInLeft {
  0% {
    opacity: 0;
    transform: translateX(-10rem);
    /* move in x axis */ }
  80% {
    transform: translateX(1rem); }
  100% {
    opacity: 1;
    transform: translate(0); } }

@keyframes moveInRight {
  0% {
    opacity: 0;
    transform: translateX(10rem);
    /* move in x axis */ }
  80% {
    transform: translateX(-1rem); }
  100% {
    opacity: 1;
    transform: translate(0); } }

@keyframes moveInBottom {
  0% {
    opacity: 0;
    transform: translateY(3rem);
    /* move in x axis */ }
  100% {
    opacity: 1;
    transform: translate(0); } }

.btn:hover {
  transform: translateY(-3px);
  box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.2);
  /* x,y,blur */ }
  .btn:hover::after {
    transform: scaleX(1.4) scaleY(1.6);
    /* increase element size */
    opacity: 0; }

.btn:active {
  transform: translateY(-1px);
  box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.2); }

.btn--white {
  background-color: #fff;
  color: #777; }
  .btn--white::after {
    background-color: #fff; }

.btn:link, .btn:visited {
  text-transform: uppercase;
  text-decoration: none;
  padding: 1.5rem 4rem;
  display: inline-block;
  /* to add some padding or some height and width to an element*/
  border-radius: 10rem;
  transition: all 0.2s;
  position: relative;
  font-size: 1.6rem; }

.btn--animated {
  animation: moveInBottom 0.5s ease-out 0.75s;
  animation-fill-mode: backwards;
  /* automatically apply the 0% frames in moveInBottom before the animation start*/ }

.btn::after {
  content: '';
  display: inline-block;
  height: 100%;
  width: 100%;
  border-radius: 10rem;
  position: absolute;
  top: 0;
  left: 0;
  z-index: -1;
  /* make it behind or at the back */
  transition: all 0.4s; }
